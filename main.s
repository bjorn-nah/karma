; Small C HuC6280 (v0.2, 08/Nov/97)
;
; Taken to HuC (22/Feb/00)
;
;
; This file generated by HuC (v3.21, 2005/04/09, Denki release)
; on Sun Jan 31 16:19:58 2016
;

HUC	= 1

	.include "startup.asm"
	.data
	.bank DATA_BANK

	.code

;----------------------------------------------------------------------------------------
; these are the various registers on the PSG. Definately not complete
;----------------------------------------------------------------------------------------
ChannelSelect       equ    $0800
MainVolume          equ    $0801
ChanFreqLo          equ    $0802
ChanFreqHi          equ    $0803
ChanControl         equ    $0804
ChanBalance         equ    $0805
ChanData            equ    $0806
ChanON              equ    $80
ChanDDA             equ    $40
ChanVolume          equ    $1F
;----------------------------------------------------------------------------------------
; these are useful masks for dealing with the psg.
;----------------------------------------------------------------------------------------
ChanXFer            equ    $0           ; transfer to channel
ChanReset           equ    $40          ; channel off, dda On => reset
LeftVolume          equ    $F0
RightVolume         equ    $0F
;----------------------------------------------------------------------------------------
; these are the various CD-BIOS MML Functions. Definately not complete
;----------------------------------------------------------------------------------------
PSGF_ON			.equ	$00
PSGF_OFF		.equ    $01
PSGF_INIT		.equ	$02
PSGF_BANK		.equ    $03			; already defined 
PSGF_TRACK  		.equ    $04
PSGF_WAVE		.equ    $05
PSGF_ENV		.equ    $06
PSGF_FM			.equ    $07
PSGF_PE			.equ    $08
PSGF_PC			.equ    $09
PSGF_TEMPO		.equ	$10
PSGF_PLAY		.equ	$0B
PSGF_MSTAT		.equ	$0c
PSGF_SSTAT		.equ	$0D
PSGF_MSTOP		.equ	$0E
PSGF_SSTOP		.equ    $0F
PSGF_ASTOP		.equ    $10
PSGF_MVOFF 		.equ    $11
PSGF_CONT    	.equ	$12
PSGF_FDOUT		.equ	$13
PSGF_DCNT		.equ	$14
	.proc _spr_make
	__pushw
	__ldw_s	14
	  call	_spr_set
	__ldw_s	12
	  call	_spr_x
	__ldw_s	10
	  call	_spr_y
	__ldw_s	8
	  call	_spr_pattern
	__ldw_s	6
	  stx	_al
	__ldw_s	4
	  call	_spr_ctrl.2
	__ldw_s	2
	  call	_spr_pal
	__ldw_s	0
	  call	_spr_pri
LL1:

	__addmi	16,__stack
	  rts
	.endp

	.proc _spr_put
	__pushw
	__ldw_s	6
	  call	_spr_set
	__ldw_s	4
	  call	_spr_x
	__ldw_s	2
	  call	_spr_y
	__ldw_s	0
	__stw	<__temp
	__ldwi	1
	  jsr	eqzp
	__lbeq	LL3
	__ldwi	8
	  stx	_al
	__ldwi	8
	  call	_spr_ctrl.2
	__lbra	LL4
LL3:

	__ldwi	8
	  stx	_al
	__ldwi	0
	  call	_spr_ctrl.2
LL4:

LL2:

	__addmi	8,__stack
	  rts
	.endp

	.proc _spr_init
	__pushw
	__ldw_s	10
	  call	_spr_set
	__ldw_s	8
	  call	_spr_pattern
	__ldw_s	6
	  stx	_al
	__ldw_s	4
	  call	_spr_ctrl.2
	__ldw_s	2
	  call	_spr_pal
	__ldw_s	0
	  call	_spr_pri
LL5:

	__addmi	12,__stack
	  rts
	.endp

	.proc _win
	__addmi	-2,__stack
	  call	_cls
	  call	_init_satb
	  call	_reset_satb
	__ldwi	0
	__stw	_color_reg
	__ldwi	0
	__stw	_color_data
	__ldwi	1
	__stw	_color_reg
	__ldwi	511
	__stw	_color_data
	__ldwi	1
	  stx	_al
	__ldwi	0
	  call	_set_font_color.2
	  call	_load_default_font
	__ldwi	LL0+0
	__phw	3,3
	__ldwi	0
	__phb	1
	__ldwi	0
	  call	_put_string.3
	__ldwi	LL0+19
	__phw	3,3
	__ldwi	0
	__phb	1
	__ldwi	0
	  call	_put_string.3
	__ldwi	120
	  ldy	#1
	  call	_vsync
	  call	_main
LL6:

	__addmi	2,__stack
	  rts
	.endp

	.proc _lose
	__addmi	-2,__stack
	  call	_cls
	  call	_init_satb
	  call	_reset_satb
	__ldwi	0
	__stw	_day
	__ldwi	0
	__stw	_color_reg
	__ldwi	0
	__stw	_color_data
	__ldwi	1
	__stw	_color_reg
	__ldwi	511
	__stw	_color_data
	__ldwi	1
	  stx	_al
	__ldwi	0
	  call	_set_font_color.2
	  call	_load_default_font
	__ldwi	LL0+41
	__phw	3,3
	__ldwi	0
	__phb	1
	__ldwi	0
	  call	_put_string.3
	__ldwi	LL0+72
	__phw	3,3
	__ldwi	0
	__phb	1
	__ldwi	0
	  call	_put_string.3
	__ldwi	120
	  ldy	#1
	  call	_vsync
LL8:

LL9:

LL10:

	__pea_s	0
	__ldwi	0
	  call	_joy
	__stwps
	__ldw_s	0
	__andwi	8
	__tstw
	__lbeq	LL12
	  call	_main
LL12:

	__lbra	LL10
LL11:

LL7:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgInit
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
    lda		#PSGF_INIT
    sta		<_dh
    ;-----------------------------------------------------------------
	; get parameter off stack
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    ;-----------------------------------------------------------------
	; save it, and call bios.
    ;-----------------------------------------------------------------
	sta 	<_al     	; _al is driver system number
    jsr		psg_bios
LL13:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgOn
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
	lda		#PSGF_ON
    sta		<_dh
    ;-----------------------------------------------------------------
	; get parameter off stack
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    ;-----------------------------------------------------------------
	; save it, and call bios.
    ;-----------------------------------------------------------------
    sta	<_al          ; irq to use. 1 = vsync
                      ;             0 = timer
    jsr	psg_bios
LL14:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgOff
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
    lda		#PSGF_OFF
    sta		<_dh          ; save function
    ;-----------------------------------------------------------------
	; no parameters: just call bios.
    ;-----------------------------------------------------------------
    jsr		psg_bios
LL15:

	  rts
	.endp

	.proc _psgRegisterBank
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
    lda		#PSGF_BANK
    sta		<_dh          ; save function
    ;-----------------------------------------------------------------
	; get parameters off stack and save them
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     <_ah
    ldy     #2	
	lda		[__stack],Y
    sta     <_al
    ;-----------------------------------------------------------------
	; and call bios.
    ;-----------------------------------------------------------------
	jsr 	psg_bios
LL16:

	__addmi	4,__stack
	  rts
	.endp

	.proc _psgRegisterTrack
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
    lda		#PSGF_TRACK
    sta		<_dh          ; save function
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     <_al
	iny
	lda		[__stack],Y
    sta     <_ah
    ;-----------------------------------------------------------------
	; and call bios.
    ;-----------------------------------------------------------------
	jsr 	psg_bios
LL17:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgRegisterWave
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
    lda		#PSGF_WAVE
    sta		<_dh          ; save function
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
	iny
	lda		[__stack],Y
    sta     _ah
    ;-----------------------------------------------------------------
	; and call bios.
    ;-----------------------------------------------------------------
	jsr 	psg_bios
LL18:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgRegisterEnvelope
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
    lda		#PSGF_ENV
    sta		<_dh          ; save function
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
	iny
	lda		[__stack],Y
    sta     _ah
    ;-----------------------------------------------------------------
	; and call bios.
    ;-----------------------------------------------------------------
	jsr 	psg_bios
LL19:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgRegisterFM
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
    lda		#PSGF_FM
    sta		<_dh          ; save function
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
	iny
	lda		[__stack],Y
    sta     _ah
    ;-----------------------------------------------------------------
	; and call bios.
    ;-----------------------------------------------------------------
	jsr 	psg_bios
LL20:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgRegisterPE
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
    lda		#PSGF_PE
    sta		<_dh          ; save function
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
	iny
	lda		[__stack],Y
    sta     _ah
    ;-----------------------------------------------------------------
	; and call bios.
    ;-----------------------------------------------------------------
	jsr 	psg_bios
LL21:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgRegisterPC
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
    lda		#PSGF_PC
    sta		<_dh          ; save function
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
	iny
	lda		[__stack],Y
    sta     _ah
    ;-----------------------------------------------------------------
	; and call bios.
    ;-----------------------------------------------------------------
	jsr 	psg_bios
LL22:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgPlay
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
	lda		#PSGF_PLAY
	sta		<_dh
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
    stz     _ah
    ;-----------------------------------------------------------------
	; and call bios.
    ;-----------------------------------------------------------------
	jsr 	psg_bios
LL23:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgMStat
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
    lda		#PSGF_MSTAT
    sta		<_dh         ; set function number
    ;-----------------------------------------------------------------
	; read track status and return.
    ;-----------------------------------------------------------------
	jsr		psg_bios     ; get status
	tax
	lda		#0			 ; clear high byte of status
LL24:

	  rts
	.endp

	.proc _psgSStat
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
	lda		#PSGF_SSTAT
	sta		<_dh          ; set function number
    ;-----------------------------------------------------------------
	; read track status and return.
    ;-----------------------------------------------------------------
	jsr		psg_bios      ; get status
	tax
	lda		#0            ; clear high byte
LL25:

	  rts
	.endp

	.proc _psgMStop
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
	lda		#PSGF_MSTOP
    sta		<_dh          ; set function number
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
    stz     _ah
    ;-----------------------------------------------------------------
	; read track status and return.
    ;-----------------------------------------------------------------
    jsr		psg_bios
	lda		#$0
LL26:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgSStop
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
	lda		#PSGF_SSTOP
    sta		<_dh          ; set function number
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
    stz     _ah
    ;-----------------------------------------------------------------
	; read track status and return.
    ;-----------------------------------------------------------------
    jsr		psg_bios
	lda		#0
LL27:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgAllStop
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
	lda		#PSGF_ASTOP
    sta		<_dh          ; set function number
    ;-----------------------------------------------------------------
	; and call bios to stop everything
    ;-----------------------------------------------------------------
    jsr		psg_bios
LL28:

	  rts
	.endp

	.proc _psgMute
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
	lda		#PSGF_MVOFF
    sta		<_dh          ; set function number
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
    stz     _ah
    ;-----------------------------------------------------------------
	; and call bios to mute tracks
    ;-----------------------------------------------------------------
    jsr		psg_bios
LL29:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgCont
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
	lda		#PSGF_CONT
    sta		<_dh          ; set function number
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
    stz     _ah
    ;-----------------------------------------------------------------
	; ask bios to continue tracks.
    ;-----------------------------------------------------------------
    jsr		psg_bios
LL30:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgFadeOut
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
	lda		#PSGF_FDOUT
    sta		<_dh          ; set function number
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
    stz     _ah
    ;-----------------------------------------------------------------
	; ask bios to fade tracks.
    ;-----------------------------------------------------------------
    jsr		psg_bios
LL31:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgDelay
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
	lda		#PSGF_DCNT
    sta		<_dh          ; set function number
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
    ;-----------------------------------------------------------------
	; ask bios to fade tracks.
    ;-----------------------------------------------------------------
    jsr		psg_bios
LL32:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgTempo
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
	lda		#PSGF_TEMPO
    sta		<_dh          ; set function number
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
    ;-----------------------------------------------------------------
	; ask bios to fade tracks.
    ;-----------------------------------------------------------------
    jsr		psg_bios
LL33:

	__addmi	2,__stack
	  rts
	.endp

	.proc _sngInit
;-----------------
; set bank values 
;
	lda 	#$03
	sta	<_dh
	lda	#BANK(_sngBank1)
	sta	<_al
	stz	<_ah
	jsr	psg_bios
;--------------------------------
; set track index table location 
;
	lda    #$04
	sta    <_dh
	lda	#LOW(TRACK_IX)
	sta	<_al
	lda	#HIGH(TRACK_IX)
	sta	<_ah
	jsr	psg_bios
;--------------------
; register modulation 
;
	lda	#7
	sta	<_dh
	lda	#LOW(MODU_IX)
	sta	<_al
	lda	#HIGH(MODU_IX)
	sta	<_ah
	jsr	psg_bios
;--------------------
; register percussion 
;
	lda	#9
	sta	<_dh
	lda	#LOW(DRUM_TAB)
	sta	<_al
	lda	#HIGH(DRUM_TAB)
	sta	<_ah
	jsr	psg_bios
;--------------------
; Set Tempo 
;
	lda	#10
	sta	<_dh
	lda	#80
	sta	<_al
	jsr	psg_bios
LL34:

	  rts
	.endp

    .data
    .bank   9
    .org    $8000
_sngBank1:
    .include  "mml\musette.asm"
    .code
	.data
	.dw $0
_sprite:
	.incspr "guy.pcx",0,0,2,18
	.code
	.data
	.dw $0
_spritepal:
	.incpal "guy.pcx"
	.code
	.data
	.dw $0
_levelmap:
	.incbin "apartment.FMP"

	.code
	.data
	.dw $1000
_leveltiles__data__:
	.inctile "Tilesetzuu.pcx",0,0,22,6
	.code
	.data
	.dw $0
_levelpal:
	.incpal "Tilesetzuu.pcx"
	.code
	.proc _karma
	__addmi	-8,__stack
	__ldwi	5
	  call	_psgInit
	__ldwi	0
	  call	_psgOn
	__ldwi	0
	  call	_psgPlay
	  call	_sngInit
	__ldwi	0
	  call	_psgDelay
	__ldwi	0
	__stw	_counter
	__ldwi	0
	__stw	_tics_sprite
	__ldwi	0
	__stw	_frame_sprite
	__ldwi	0
	__stw	_state_sprite
	__ldwi	256
	__stw	_sprite_x
	__ldwi	240
	__stw	_sprite_y
	__ldwi	0
	__stw	_sprite_v
	__ldwi	2
	  stx	_dir_sprite
	__ldw	_sprite_x
	__stw	_sprite_nx
	__ldw	_sprite_y
	__stw	_sprite_ny
	__ldw	_sprite_x
	__stw	_sprite_vx
	__ldw	_sprite_y
	__stw	_sprite_vy
	__ldwi	0
	__stw	_mapx
	__ldwi	0
	__stw	_lastmapx
	__ldwi	0
	__stw	_mapy
	__ldwi	0
	__stw	_lastmapy
	__ldwi	0
	__stw	_vmapx
	__ldwi	0
	__stw	_vmapy
	__ldwi	2
	  stx	_al
	__ldwi	1
	  call	_set_font_color.2
	  call	_load_default_font
	__farptr	_levelmap,_bl,_si
	__ldwi	48
	__stw	_ax
	__ldwi	45
	  call	_set_map_data.3
	__ldwi	_leveltiles
	__stw	_di
	  call	_set_tile_data.1
	__ldwi	4096
	  call	_load_tile
	__ldwi	0
	  stx	_al
	__ldwi	0
	  stx	_ah
	__ldwi	0
	__phw	4,4
	__ldwi	0
	__phw	2
	__ldwi	17
	  stx	_dl
	__ldwi	16
	  stx	_dh
	  call	_load_map.6
	__ldwi	0
	  stx	_al
	__farptr	_levelpal,_bl,_si
	__ldwi	1
	  stx	_cl
	  call	_load_palette.3
	__ldwi	0
	__pushw
	__ldwi	180
	__pushw
	__ldwi	121
	__pushw
	__ldwi	20480
	__pushw
	__ldwi	57
	__pushw
	__ldwi	25
	__pushw
	__ldwi	0
	__pushw
	__ldwi	1
	  call	_spr_make
	_set_sprpal	#0,_spritepal,#1
	__ldwi	20480
	__stw	_di
	__farptr	_sprite,_bl,_si
	__ldwi	2304
	__stw	_cx
	  call	_load_vram.3
	__ldwi	0
	__stw	_last_obj_index
	__ldwi	0
	__stw	_right_place_nb
	__ldwi	0
	__stw	_wrong_place_nb
	__ldw	_day
	__stw	<__temp
	__ldwi	0
	  jsr	lezp
	__lbeq	LL36
	__ldwi	1
	__stw	_day
LL36:

	__ldwi	_objects
	__addwi	2
	__pushw
	__ldwi	LL0+234
	__stwps
	__ldwi	_objects
	__addwi	4
	__pushw
	__ldwi	LL0+259
	__stwps
	__ldwi	_objects
	__addwi	6
	__pushw
	__ldwi	LL0+283
	__stwps
	__ldwi	_objects
	__addwi	8
	__pushw
	__ldwi	LL0+310
	__stwps
	__ldwi	_objects
	__addwi	10
	__pushw
	__ldwi	LL0+335
	__stwps
	__ldwi	_objects
	__addwi	12
	__pushw
	__ldwi	LL0+356
	__stwps
	__ldwi	_objects
	__addwi	14
	__pushw
	__ldwi	LL0+386
	__stwps
	__ldwi	_objects
	__addwi	16
	__pushw
	__ldwi	LL0+420
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	176
	__pushw
	__ldwi	1
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	178
	__pushw
	__ldwi	2
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	180
	__pushw
	__ldwi	3
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	182
	__pushw
	__ldwi	4
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	184
	__pushw
	__ldwi	4
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	186
	__pushw
	__ldwi	4
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	188
	__pushw
	__ldwi	4
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	190
	__pushw
	__ldwi	5
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	192
	__pushw
	__ldwi	5
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	194
	__pushw
	__ldwi	5
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	196
	__pushw
	__ldwi	5
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	198
	__pushw
	__ldwi	5
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	200
	__pushw
	__ldwi	5
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	202
	__pushw
	__ldwi	5
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	204
	__pushw
	__ldwi	5
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	206
	__pushw
	__ldwi	6
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	208
	__pushw
	__ldwi	6
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	210
	__pushw
	__ldwi	7
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	212
	__pushw
	__ldwi	7
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	214
	__pushw
	__ldwi	7
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	216
	__pushw
	__ldwi	7
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	218
	__pushw
	__ldwi	8
	__stwps
	__ldwi	_tiles_w_obj
	__addwi	220
	__pushw
	__ldwi	3
	__stwps
	__ldwi	0
	__stw	_j
LL37:

	__ldw	_j
	__stw	<__temp
	__ldwi	4
	  jsr	ltzp
	__lbne	LL39
	__lbra	LL40
LL38:

	__ldw	_j
	incw	_j
	__lbra	LL37
LL39:

	__ldw	_j
	__aslw
	__addwi	_action_stack
	__pushw
	__ldwi	0
	__stwps
	__lbra	LL38
LL40:

	  call	_place_map
	__ldwi	LL0+454
	__phw	3,3
	__ldwi	0
	__phb	1
	__ldwi	13
	  call	_put_string.3
	__ldw	_day
	__phw	4,4
	__ldwi	2
	__phb	2
	__ldwi	9
	__phb	1
	__ldwi	13
	  call	_put_number.4
	__ldwi	LL0+463
	__phw	3,3
	__ldwi	11
	__phb	1
	__ldwi	13
	  call	_put_string.3
	__ldwi	240
	  ldy	#1
	  call	_vsync
LL41:

LL42:

LL43:

	  ldy	#0
	  call	_vsync
	__pea_s	2
	  call	_psgMStat
	__stwps
	__pea_s	0
	  call	_psgSStat
	__stwps
	__ldwi	0
	  call	_joy
	__stw	_j1
	  call	_player_machine
	  call	_physique
	__ldw	_counter
	incw	_counter
	  ldy	#0
	  call	_satb_update
	__lbra	LL43
LL44:

LL35:

	__addmi	8,__stack
	  rts
	.endp

	.proc _player_machine
	__ldwi	0
	  call	_spr_set
	__ldw	_state_sprite
	__stw	<__temp
	__ldwi	0
	  jsr	eqzp
	__lbeq	LL46
	  call	_player_sprite_0
LL46:

	__ldw	_state_sprite
	__stw	<__temp
	__ldwi	1
	  jsr	eqzp
	__lbeq	LL47
	  call	_player_sprite_1
LL47:

	__ldw	_state_sprite
	__stw	<__temp
	__ldwi	2
	  jsr	eqzp
	__lbeq	LL48
	  call	_player_sprite_2
LL48:

	__ldw	_state_sprite
	__stw	<__temp
	__ldwi	5
	  jsr	eqzp
	__lbeq	LL49
	  call	_player_sprite_5
LL49:

LL45:

	  rts
	.endp

	.proc _player_sprite_0
	__ldw	_tics_sprite
	__stw	<__temp
	__ldwi	0
	  jsr	eqzp
	__lbeq	LL51
	__ldwi	20480
	  call	_spr_pattern
LL51:

	__ldwi	1
	__stw	_tics_sprite
	__ldw	_j1
	__andwi	128
	__tstw
	__lbeq	LL52
	__ldwi	0
	__stw	_tics_sprite
	__ldwi	0
	__stw	_frame_sprite
	__ldwi	1
	__stw	_state_sprite
	__ldwi	20992
	  call	_spr_pattern
	__ldwi	1
	  stx	_dir_sprite
LL52:

	__ldw	_j1
	__andwi	32
	__tstw
	__lbeq	LL53
	__ldwi	0
	__stw	_tics_sprite
	__ldwi	0
	__stw	_frame_sprite
	__ldwi	1
	__stw	_state_sprite
	__ldwi	20992
	  call	_spr_pattern
	__ldwi	2
	  stx	_dir_sprite
LL53:

	__ldw	_j1
	__andwi	16
	__tstw
	__lbeq	LL54
	__ldwi	0
	__stw	_tics_sprite
	__ldwi	0
	__stw	_frame_sprite
	__ldwi	1
	__stw	_state_sprite
	__ldwi	20736
	  call	_spr_pattern
	__ldwi	3
	  stx	_dir_sprite
LL54:

	__ldw	_j1
	__andwi	64
	__tstw
	__lbeq	LL55
	__ldwi	0
	__stw	_tics_sprite
	__ldwi	0
	__stw	_frame_sprite
	__ldwi	1
	__stw	_state_sprite
	__ldwi	20480
	  call	_spr_pattern
	__ldwi	4
	  stx	_dir_sprite
LL55:

	__ldw	_j1
	__andwi	128
	__tstw
	__lbeq	LL57
	__ldw	_j1
	__andwi	16
LL57:

	__boolw
	__tstw
	__lbeq	LL56
	__ldwi	0
	__stw	_tics_sprite
	__ldwi	0
	__stw	_frame_sprite
	__ldwi	1
	__stw	_state_sprite
	__ldwi	20736
	  call	_spr_pattern
	__ldwi	5
	  stx	_dir_sprite
LL56:

	__ldw	_j1
	__andwi	32
	__tstw
	__lbeq	LL59
	__ldw	_j1
	__andwi	16
LL59:

	__boolw
	__tstw
	__lbeq	LL58
	__ldwi	0
	__stw	_tics_sprite
	__ldwi	0
	__stw	_frame_sprite
	__ldwi	1
	__stw	_state_sprite
	__ldwi	20736
	  call	_spr_pattern
	__ldwi	6
	  stx	_dir_sprite
LL58:

	__ldw	_j1
	__andwi	128
	__tstw
	__lbeq	LL61
	__ldw	_j1
	__andwi	64
LL61:

	__boolw
	__tstw
	__lbeq	LL60
	__ldwi	0
	__stw	_tics_sprite
	__ldwi	0
	__stw	_frame_sprite
	__ldwi	1
	__stw	_state_sprite
	__ldwi	20480
	  call	_spr_pattern
	__ldwi	7
	  stx	_dir_sprite
LL60:

	__ldw	_j1
	__andwi	32
	__tstw
	__lbeq	LL63
	__ldw	_j1
	__andwi	64
LL63:

	__boolw
	__tstw
	__lbeq	LL62
	__ldwi	0
	__stw	_tics_sprite
	__ldwi	0
	__stw	_frame_sprite
	__ldwi	1
	__stw	_state_sprite
	__ldwi	20480
	  call	_spr_pattern
	__ldwi	8
	  stx	_dir_sprite
LL62:

	__ldw	_j1
	__andwi	2
	__tstw
	__lbeq	LL64
	__ldwi	5
	__stw	_state_sprite
LL64:

	__ldw	_j1
	__andwi	1
	__tstw
	__lbeq	LL65
	__ldwi	1
	  call	_psgPlay
LL65:

LL50:

	  rts
	.endp

	.proc _player_sprite_1
	__addmi	-4,__stack
	__stwi_s	0,2
	__ldw	_tics_sprite
	incw	_tics_sprite
	__ldw	_tics_sprite
	__stw	<__temp
	__ldwi	10
	  jsr	gtzp
	__lbeq	LL67
	__ldwi	0
	__stw	_tics_sprite
	__ldw	_frame_sprite
	incw	_frame_sprite
	__ldw	_frame_sprite
	__stw	<__temp
	__ldwi	3
	  jsr	gtzp
	__lbeq	LL68
	__ldwi	0
	__stw	_frame_sprite
LL68:

	__ldw	_frame_sprite
	__stw	<__temp
	__ldwi	0
	  jsr	eqzp
	__lbeq	LL69
	__ldwi	0
	__stw	_decal_frame
LL69:

	__ldw	_frame_sprite
	__stw	<__temp
	__ldwi	1
	  jsr	eqzp
	__lbeq	LL70
	__ldwi	256
	__stw	_decal_frame
LL70:

	__ldw	_frame_sprite
	__stw	<__temp
	__ldwi	2
	  jsr	eqzp
	__lbeq	LL71
	__ldwi	0
	__stw	_decal_frame
LL71:

	__ldw	_frame_sprite
	__stw	<__temp
	__ldwi	3
	  jsr	eqzp
	__lbeq	LL72
	__ldwi	512
	__stw	_decal_frame
LL72:

LL67:

	__ldw	_j1
	__andwi	128
	__tstw
	__lbeq	LL73
	__ldwi	22016
	__addw	_decal_frame
	__stw_s	0
	__ldw_s	0
	  call	_spr_pattern
	__ldwi	1
	  stx	_dir_sprite
	__stwi_s	1,2
LL73:

	__ldw	_j1
	__andwi	32
	__tstw
	__lbeq	LL74
	__ldwi	22016
	__addw	_decal_frame
	__stw_s	0
	__ldw_s	0
	  call	_spr_pattern
	__ldwi	2
	  stx	_dir_sprite
	__stwi_s	1,2
LL74:

	__ldw	_j1
	__andwi	16
	__tstw
	__lbeq	LL75
	__ldwi	21248
	__addw	_decal_frame
	__stw_s	0
	__ldw_s	0
	  call	_spr_pattern
	__ldwi	3
	  stx	_dir_sprite
	__stwi_s	1,2
LL75:

	__ldw	_j1
	__andwi	64
	__tstw
	__lbeq	LL76
	__ldwi	20480
	__addw	_decal_frame
	__stw_s	0
	__ldw_s	0
	  call	_spr_pattern
	__ldwi	4
	  stx	_dir_sprite
	__stwi_s	1,2
LL76:

	__ldw	_j1
	__andwi	128
	__tstw
	__lbeq	LL78
	__ldw	_j1
	__andwi	16
LL78:

	__boolw
	__tstw
	__lbeq	LL77
	__ldwi	21248
	__addw	_decal_frame
	__stw_s	0
	__ldw_s	0
	  call	_spr_pattern
	__ldwi	5
	  stx	_dir_sprite
	__stwi_s	1,2
LL77:

	__ldw	_j1
	__andwi	32
	__tstw
	__lbeq	LL80
	__ldw	_j1
	__andwi	16
LL80:

	__boolw
	__tstw
	__lbeq	LL79
	__ldwi	21248
	__addw	_decal_frame
	__stw_s	0
	__ldw_s	0
	  call	_spr_pattern
	__ldwi	6
	  stx	_dir_sprite
	__stwi_s	1,2
LL79:

	__ldw	_j1
	__andwi	128
	__tstw
	__lbeq	LL82
	__ldw	_j1
	__andwi	64
LL82:

	__boolw
	__tstw
	__lbeq	LL81
	__ldwi	20480
	__addw	_decal_frame
	__stw_s	0
	__ldw_s	0
	  call	_spr_pattern
	__ldwi	7
	  stx	_dir_sprite
	__stwi_s	1,2
LL81:

	__ldw	_j1
	__andwi	32
	__tstw
	__lbeq	LL84
	__ldw	_j1
	__andwi	64
LL84:

	__boolw
	__tstw
	__lbeq	LL83
	__ldwi	20480
	__addw	_decal_frame
	__stw_s	0
	__ldw_s	0
	  call	_spr_pattern
	__ldwi	8
	  stx	_dir_sprite
	__stwi_s	1,2
LL83:

	__ldw_s	2
	__stw	<__temp
	__ldwi	0
	  jsr	eqzp
	__lbeq	LL85
	__ldwi	0
	__stw	_tics_sprite
	__ldwi	0
	__stw	_frame_sprite
	__ldwi	0
	__stw	_state_sprite
	__lbra	LL86
LL85:

	__ldb	_dir_sprite
	__stw	<__temp
	__ldwi	1
	  jsr	eqzp
	__lbeq	LL87
	__ldw	_sprite_nx
	__subwi	2
	__stw	_sprite_nx
LL87:

	__ldb	_dir_sprite
	__stw	<__temp
	__ldwi	2
	  jsr	eqzp
	__lbeq	LL88
	__ldw	_sprite_nx
	__addwi	2
	__stw	_sprite_nx
LL88:

	__ldb	_dir_sprite
	__stw	<__temp
	__ldwi	3
	  jsr	eqzp
	__lbeq	LL89
	__ldw	_sprite_ny
	__subwi	2
	__stw	_sprite_ny
LL89:

	__ldb	_dir_sprite
	__stw	<__temp
	__ldwi	4
	  jsr	eqzp
	__lbeq	LL90
	__ldw	_sprite_ny
	__addwi	2
	__stw	_sprite_ny
LL90:

	__ldb	_dir_sprite
	__stw	<__temp
	__ldwi	5
	  jsr	eqzp
	__lbeq	LL91
	__ldw	_sprite_nx
	__subwi	2
	__stw	_sprite_nx
	__ldw	_sprite_ny
	__subwi	2
	__stw	_sprite_ny
LL91:

	__ldb	_dir_sprite
	__stw	<__temp
	__ldwi	6
	  jsr	eqzp
	__lbeq	LL92
	__ldw	_sprite_nx
	__addwi	2
	__stw	_sprite_nx
	__ldw	_sprite_ny
	__subwi	2
	__stw	_sprite_ny
LL92:

	__ldb	_dir_sprite
	__stw	<__temp
	__ldwi	7
	  jsr	eqzp
	__lbeq	LL93
	__ldw	_sprite_nx
	__subwi	2
	__stw	_sprite_nx
	__ldw	_sprite_ny
	__addwi	2
	__stw	_sprite_ny
LL93:

	__ldb	_dir_sprite
	__stw	<__temp
	__ldwi	8
	  jsr	eqzp
	__lbeq	LL94
	__ldw	_sprite_nx
	__addwi	2
	__stw	_sprite_nx
	__ldw	_sprite_ny
	__addwi	2
	__stw	_sprite_ny
LL94:

LL86:

LL66:

	__addmi	4,__stack
	  rts
	.endp

	.proc _player_sprite_2
	__ldwi	0
	__stw	_state_sprite
LL95:

	  rts
	.endp

	.proc _player_sprite_5
	__ldw	_j1
	__andwi	2
	__tstw
	__lbeq	LL97
	__ldwi	5
	__stw	_state_sprite
LL97:

LL96:

	  rts
	.endp

	.proc _physique
	__addmi	-6,__stack
	__ldw	_sprite_vx
	__addwi	8
	__pushw
	__ldw	_sprite_vy
	__addwi	4
	__pushw
	__ldwi	16
	__pushw
	__ldwi	24
	__pushw
	__lea_s	12
	  call	_get_coll_tile
	__ldw	_sprite_vx
	__addwi	8
	__pushw
	__ldw	_sprite_vy
	__addwi	4
	__pushw
	__ldwi	16
	__pushw
	__ldwi	24
	__pushw
	__lea_s	10
	  call	_get_coll_obj
	__ldw_s	4
	__andwi	8
	__stw	<__temp
	__ldwi	8
	  jsr	eqzp
	__lbeq	LL99
	__ldw	_sprite_ny
	__stw	<__temp
	__ldw	_sprite_vy
	  jsr	ltzp
	__lbeq	LL100
	__ldw	_sprite_vy
	__stw	_sprite_ny
LL100:

LL99:

	__ldw_s	4
	__andwi	4
	__stw	<__temp
	__ldwi	4
	  jsr	eqzp
	__lbeq	LL101
	__ldw	_sprite_ny
	__stw	<__temp
	__ldw	_sprite_vy
	  jsr	gtzp
	__lbeq	LL102
	__ldw	_sprite_vy
	__stw	_sprite_ny
LL102:

LL101:

	__ldw_s	4
	__andwi	2
	__stw	<__temp
	__ldwi	2
	  jsr	eqzp
	__lbeq	LL103
	__ldw	_sprite_nx
	__stw	<__temp
	__ldw	_sprite_vx
	  jsr	ltzp
	__lbeq	LL104
	__ldw	_sprite_vx
	__stw	_sprite_nx
LL104:

LL103:

	__ldw_s	4
	__andwi	1
	__stw	<__temp
	__ldwi	1
	  jsr	eqzp
	__lbeq	LL105
	__ldw	_sprite_nx
	__stw	<__temp
	__ldw	_sprite_vx
	  jsr	gtzp
	__lbeq	LL106
	__ldw	_sprite_vx
	__stw	_sprite_nx
LL106:

LL105:

	__ldw	_state_sprite
	__stw	<__temp
	__ldwi	5
	  jsr	eqzp
	__lbeq	LL107
	__ldwi	0
	__stw	_i
LL108:

	__ldw	_i
	__stw	<__temp
	__ldwi	4
	  jsr	ltzp
	__lbne	LL110
	__lbra	LL111
LL109:

	__ldw	_i
	incw	_i
	__lbra	LL108
LL110:

	__ldw	_i
	__aslw
	__addwi	_reference_stack
	__stw	__ptr
	__ldwp	__ptr
	__phw	4,4
	__ldwi	2
	__phb	2
	__ldwi	5
	__phb	1
	__ldw	_i
	__pushw
	__ldwi	2
	  jsr	smul
	  call	_put_number.4
	__lbra	LL109
LL111:

	__ldw_s	2
	__stw	<__temp
	__ldwi	87
	  jsr	gtzp
	__lbeq	LL112
	__ldw	_last_obj_index
	__stw	<__temp
	__ldwi	4
	  jsr	ltzp
	__lbeq	LL113
	__stwi_s	0,0
	__ldwi	0
	__stw	_i
LL114:

	__ldw	_i
	__stw	<__temp
	__ldwi	4
	  jsr	ltzp
	__lbne	LL116
	__lbra	LL117
LL115:

	__ldw	_i
	incw	_i
	__lbra	LL114
LL116:

	__ldw_s	0
	__stw	<__temp
	__ldwi	0
	  jsr	eqzp
	__lbeq	LL119
	__ldw	_i
	__aslw
	__addwi	_action_stack
	__stw	__ptr
	__ldwp	__ptr
	__pushw
	__ldw_s	4
	__aslw
	__addwi	_tiles_w_obj
	__stw	__ptr
	__ldwp	__ptr
	  jsr	eq
LL119:

	__boolw
	__tstw
	__lbeq	LL118
	__stwi_s	1,0
LL118:

	__lbra	LL115
LL117:

	__ldw_s	0
	__stw	<__temp
	__ldwi	0
	  jsr	eqzp
	__lbeq	LL120
	__ldw	_last_obj_index
	__aslw
	__addwi	_action_stack
	__pushw
	__ldw_s	4
	__aslw
	__addwi	_tiles_w_obj
	__stw	__ptr
	__ldwp	__ptr
	__stwps
	__ldw	_last_obj_index
	incw	_last_obj_index
	__ldwi	1
	  call	_psgPlay
	__ldwi	60
	  ldy	#1
	  call	_vsync
	__lbra	LL121
LL120:

	__ldwi	2
	  call	_psgPlay
LL121:

	__lbra	LL122
LL113:

LL122:

LL112:

	__ldwi	0
	__stw	_i
LL123:

	__ldw	_i
	__stw	<__temp
	__ldwi	4
	  jsr	ltzp
	__lbne	LL125
	__lbra	LL126
LL124:

	__ldw	_i
	incw	_i
	__lbra	LL123
LL125:

	__ldw	_i
	__aslw
	__addwi	_action_stack
	__stw	__ptr
	__ldwp	__ptr
	__phw	4,4
	__ldwi	2
	__phb	2
	__ldwi	10
	__phb	1
	__ldw	_i
	__pushw
	__ldwi	2
	  jsr	smul
	  call	_put_number.4
	__lbra	LL124
LL126:

	__ldwi	0
	__stw	_state_sprite
LL107:

	__ldw	_last_obj_index
	__stw	<__temp
	__ldwi	4
	  jsr	eqzp
	__lbeq	LL127
	__ldwi	0
	__stw	_i
LL128:

	__ldw	_i
	__stw	<__temp
	__ldwi	4
	  jsr	ltzp
	__lbne	LL130
	__lbra	LL131
LL129:

	__ldw	_i
	incw	_i
	__lbra	LL128
LL130:

	__ldw	_i
	__aslw
	__addwi	_reference_stack
	__stw	__ptr
	__ldwp	__ptr
	__pushw
	__ldw	_i
	__aslw
	__addwi	_action_stack
	__stw	__ptr
	__ldwp	__ptr
	  jsr	eq
	__lbeq	LL132
	__ldw	_right_place_nb
	incw	_right_place_nb
LL132:

	__lbra	LL129
LL131:

	__ldwi	0
	__stw	_i
LL133:

	__ldw	_i
	__stw	<__temp
	__ldwi	4
	  jsr	ltzp
	__lbne	LL135
	__lbra	LL136
LL134:

	__ldw	_i
	incw	_i
	__lbra	LL133
LL135:

	__ldwi	0
	__stw	_j
LL137:

	__ldw	_j
	__stw	<__temp
	__ldwi	4
	  jsr	ltzp
	__lbne	LL139
	__lbra	LL140
LL138:

	__ldw	_j
	incw	_j
	__lbra	LL137
LL139:

	__ldw	_i
	__aslw
	__addwi	_reference_stack
	__stw	__ptr
	__ldwp	__ptr
	__pushw
	__ldw	_j
	__aslw
	__addwi	_action_stack
	__stw	__ptr
	__ldwp	__ptr
	  jsr	eq
	__lbeq	LL142
	__ldw	_i
	__stw	<__temp
	__ldw	_j
	  jsr	nezp
LL142:

	__boolw
	__tstw
	__lbeq	LL141
	__ldw	_wrong_place_nb
	incw	_wrong_place_nb
LL141:

	__lbra	LL138
LL140:

	__lbra	LL134
LL136:

	__ldw	_right_place_nb
	__stw	<__temp
	__ldwi	4
	  jsr	eqzp
	__lbeq	LL143
	  call	_win
	__lbra	LL144
LL143:

	__ldw	_day
	__stw	<__temp
	__ldwi	7
	  jsr	ltzp
	__lbeq	LL145
	__ldw	_day
	incw	_day
	  call	_cls
	__ldwi	0
	__stw	_color_reg
	__ldwi	0
	__stw	_color_data
	__ldwi	1
	__stw	_color_reg
	__ldwi	511
	__stw	_color_data
	  call	_karma
	__lbra	LL146
LL145:

	  call	_lose
LL146:

LL144:

LL127:

	__ldw	_sprite_nx
	__stw	_sprite_vx
	__ldw	_sprite_ny
	__stw	_sprite_vy
	__ldw	_sprite_vx
	__subwi	112
	__stw	_vmapx
	__ldw	_sprite_vy
	__subwi	96
	__stw	_vmapy
	__ldwi	112
	__stw	_sprite_x
	__ldwi	96
	__stw	_sprite_y
	__ldw	_mapx
	  stx	_al
	__ldw	_mapy
	__addwi	11
	  stx	_ah
	__ldw	_mapx
	__phw	4,4
	__ldw	_mapy
	__addwi	11
	__phw	2
	__ldwi	17
	  stx	_dl
	__ldwi	3
	  stx	_dh
	  call	_load_map.6
	__ldwi	0
	__pushw
	__ldw	_sprite_x
	__pushw
	__ldw	_sprite_y
	__pushw
	__ldb	_dir_sprite
	  call	_spr_put
	  call	_place_map
	__ldwi	_objects
	__pushw
	__ldw_s	4
	__aslw
	__addwi	_tiles_w_obj
	__stw	__ptr
	__ldwp	__ptr
	__aslw
	__addws
	__stw	__ptr
	__ldwp	__ptr
	__phw	3,3
	__ldw	_mapx
	__pushw
	__ldwi	2
	  jsr	smul
	__addwi	2
	__phb	1
	__ldw	_mapy
	__pushw
	__ldwi	2
	  jsr	smul
	__addwi	26
	  call	_put_string.3
LL98:

	__addmi	6,__stack
	  rts
	.endp

	.proc _get_pxl_tile
	__pushw
	__ldw_s	0
	__pushw
	__ldw_s	6
	__pushw
	__ldwi	4
	  jsr	asr
	  stx	_dl
	__ldw_s	4
	__pushw
	__ldwi	4
	  jsr	asr
	  call	_map_get_tile.2
	__stwps
LL147:

	__addmi	6,__stack
	  rts
	.endp

	.proc _get_val_tile
	__pushw
	__addmi	-6,__stack
	__stwi_s	128,0
	__ldw_s	14
	__stw_s	4
LL149:

	__ldw_s	4
	__pushw
	__ldw_s	16
	__addw_s	12
	  jsr	lt
	__lbne	LL151
	__lbra	LL152
LL150:

	__ldw_s	4
	__addwi	16
	__stw_s	4
	__lbra	LL149
LL151:

	__ldw_s	4
	__pushw
	__ldw_s	14
	__addw_s	10
	__pushw
	__lea_s	6
	  call	_get_pxl_tile
	__ldw_s	2
	__stw	<__temp
	__ldwi	53
	  jsr	ltzp
	__lbeq	LL153
	__ldw_s	2
	__stw_s	0
LL153:

	__lbra	LL150
LL152:

	__ldw_s	6
	__pushw
	__ldw_s	2
	__stwps
LL148:

	__addmi	16,__stack
	  rts
	.endp

	.proc _get_coll_tile
	__pushw
	__addmi	-6,__stack
	__stwi_s	0,0
	__ldw_s	14
	__stw_s	4
LL155:

	__ldw_s	4
	__pushw
	__ldw_s	16
	__addw_s	12
	  jsr	lt
	__lbne	LL157
	__lbra	LL158
LL156:

	__ldw_s	4
	__addwi	16
	__stw_s	4
	__lbra	LL155
LL157:

	__ldw_s	4
	__pushw
	__ldw_s	14
	__subwi	1
	__pushw
	__lea_s	6
	  call	_get_pxl_tile
	__ldw_s	2
	__stw	<__temp
	__ldwi	53
	  jsr	ltzp
	__lbne	LL160
	__ldw_s	2
	__stw	<__temp
	__ldwi	87
	  jsr	gtzp
LL160:

	__boolw
	__tstw
	__lbeq	LL159
	__ldw_s	0
	__orwi	8
	__stw_s	0
LL159:

	__lbra	LL156
LL158:

	__ldw_s	14
	__addw_s	10
	__subwi	1
	__pushw
	__ldw_s	14
	__subwi	1
	__pushw
	__lea_s	6
	  call	_get_pxl_tile
	__ldw_s	2
	__stw	<__temp
	__ldwi	53
	  jsr	ltzp
	__lbne	LL162
	__ldw_s	2
	__stw	<__temp
	__ldwi	87
	  jsr	gtzp
LL162:

	__boolw
	__tstw
	__lbeq	LL161
	__ldw_s	0
	__orwi	8
	__stw_s	0
LL161:

	__ldw_s	14
	__stw_s	4
LL163:

	__ldw_s	4
	__pushw
	__ldw_s	16
	__addw_s	12
	  jsr	lt
	__lbne	LL165
	__lbra	LL166
LL164:

	__ldw_s	4
	__addwi	16
	__stw_s	4
	__lbra	LL163
LL165:

	__ldw_s	4
	__pushw
	__ldw_s	14
	__addw_s	10
	__pushw
	__lea_s	6
	  call	_get_pxl_tile
	__ldw_s	2
	__stw	<__temp
	__ldwi	53
	  jsr	ltzp
	__lbne	LL168
	__ldw_s	2
	__stw	<__temp
	__ldwi	87
	  jsr	gtzp
LL168:

	__boolw
	__tstw
	__lbeq	LL167
	__ldw_s	0
	__orwi	4
	__stw_s	0
LL167:

	__lbra	LL164
LL166:

	__ldw_s	14
	__addw_s	10
	__subwi	1
	__pushw
	__ldw_s	14
	__addw_s	10
	__pushw
	__lea_s	6
	  call	_get_pxl_tile
	__ldw_s	2
	__stw	<__temp
	__ldwi	53
	  jsr	ltzp
	__lbne	LL170
	__ldw_s	2
	__stw	<__temp
	__ldwi	87
	  jsr	gtzp
LL170:

	__boolw
	__tstw
	__lbeq	LL169
	__ldw_s	0
	__orwi	4
	__stw_s	0
LL169:

	__ldw_s	12
	__stw_s	4
LL171:

	__ldw_s	4
	__pushw
	__ldw_s	14
	__addw_s	10
	  jsr	lt
	__lbne	LL173
	__lbra	LL174
LL172:

	__ldw_s	4
	__addwi	16
	__stw_s	4
	__lbra	LL171
LL173:

	__ldw_s	14
	__subwi	1
	__pushw
	__ldw_s	6
	__pushw
	__lea_s	6
	  call	_get_pxl_tile
	__ldw_s	2
	__stw	<__temp
	__ldwi	53
	  jsr	ltzp
	__lbne	LL176
	__ldw_s	2
	__stw	<__temp
	__ldwi	87
	  jsr	gtzp
LL176:

	__boolw
	__tstw
	__lbeq	LL175
	__ldw_s	0
	__orwi	2
	__stw_s	0
LL175:

	__lbra	LL172
LL174:

	__ldw_s	14
	__subwi	1
	__pushw
	__ldw_s	14
	__addw_s	10
	__subwi	1
	__pushw
	__lea_s	6
	  call	_get_pxl_tile
	__ldw_s	2
	__stw	<__temp
	__ldwi	53
	  jsr	ltzp
	__lbne	LL178
	__ldw_s	2
	__stw	<__temp
	__ldwi	87
	  jsr	gtzp
LL178:

	__boolw
	__tstw
	__lbeq	LL177
	__ldw_s	0
	__orwi	2
	__stw_s	0
LL177:

	__ldw_s	12
	__stw_s	4
LL179:

	__ldw_s	4
	__pushw
	__ldw_s	14
	__addw_s	10
	  jsr	lt
	__lbne	LL181
	__lbra	LL182
LL180:

	__ldw_s	4
	__addwi	16
	__stw_s	4
	__lbra	LL179
LL181:

	__ldw_s	14
	__addw_s	10
	__pushw
	__ldw_s	6
	__pushw
	__lea_s	6
	  call	_get_pxl_tile
	__ldw_s	2
	__stw	<__temp
	__ldwi	53
	  jsr	ltzp
	__lbne	LL184
	__ldw_s	2
	__stw	<__temp
	__ldwi	87
	  jsr	gtzp
LL184:

	__boolw
	__tstw
	__lbeq	LL183
	__ldw_s	0
	__orwi	1
	__stw_s	0
LL183:

	__lbra	LL180
LL182:

	__ldw_s	14
	__addw_s	10
	__pushw
	__ldw_s	14
	__addw_s	10
	__subwi	1
	__pushw
	__lea_s	6
	  call	_get_pxl_tile
	__ldw_s	2
	__stw	<__temp
	__ldwi	53
	  jsr	ltzp
	__lbne	LL186
	__ldw_s	2
	__stw	<__temp
	__ldwi	87
	  jsr	gtzp
LL186:

	__boolw
	__tstw
	__lbeq	LL185
	__ldw_s	0
	__orwi	1
	__stw_s	0
LL185:

	__ldw_s	6
	__pushw
	__ldw_s	2
	__stwps
LL154:

	__addmi	16,__stack
	  rts
	.endp

	.proc _get_coll_obj
	__pushw
	__addmi	-8,__stack
	__stwi_s	0,2
	__stwi_s	0,0
	__ldw_s	16
	__stw_s	6
LL188:

	__ldw_s	6
	__pushw
	__ldw_s	18
	__addw_s	14
	  jsr	lt
	__lbne	LL190
	__lbra	LL191
LL189:

	__ldw_s	6
	__addwi	16
	__stw_s	6
	__lbra	LL188
LL190:

	__ldw_s	6
	__pushw
	__ldw_s	16
	__subwi	1
	__pushw
	__lea_s	8
	  call	_get_pxl_tile
	__ldw_s	4
	__stw	<__temp
	__ldwi	87
	  jsr	gtzp
	__lbeq	LL192
	__ldw_s	2
	__orwi	8
	__stw_s	2
LL192:

	__ldw_s	4
	__pushw
	__ldw_s	2
	  jsr	gt
	__lbeq	LL193
	__ldw_s	4
	__stw_s	0
LL193:

	__lbra	LL189
LL191:

	__ldw_s	16
	__addw_s	12
	__subwi	1
	__pushw
	__ldw_s	16
	__subwi	1
	__pushw
	__lea_s	8
	  call	_get_pxl_tile
	__ldw_s	4
	__stw	<__temp
	__ldwi	87
	  jsr	gtzp
	__lbeq	LL194
	__ldw_s	2
	__orwi	8
	__stw_s	2
LL194:

	__ldw_s	4
	__pushw
	__ldw_s	2
	  jsr	gt
	__lbeq	LL195
	__ldw_s	4
	__stw_s	0
LL195:

	__ldw_s	8
	__pushw
	__ldw_s	2
	__stwps
LL187:

	__addmi	18,__stack
	  rts
	.endp

	.proc _place_map
	__addmi	-4,__stack
	__ldw	_vmapx
	__pushw
	__ldwi	4
	  jsr	asr
	__stw	_mapx
	__ldw	_vmapy
	__pushw
	__ldwi	4
	  jsr	asr
	__stw	_mapy
	__ldw	_mapx
	__stw	<__temp
	__ldw	_lastmapx
	  jsr	gtzp
	__lbeq	LL197
	__ldw	_mapx
	__subw	_lastmapx
	__stw_s	2
	__ldw	_mapx
	__addwi	17
	__pushw
	__ldw_s	4
	__subws
	__andwi	255
	__stw_s	0
	__ldw_s	0
	  stx	_al
	__ldw	_mapy
	  stx	_ah
	__ldw_s	0
	__phw	4,4
	__ldw	_mapy
	__phw	2
	__ldw_s	2
	  stx	_dl
	__ldwi	16
	  stx	_dh
	  call	_load_map.6
LL197:

	__ldw	_mapx
	__stw	<__temp
	__ldw	_lastmapx
	  jsr	ltzp
	__lbeq	LL198
	__ldw	_lastmapx
	__subw	_mapx
	__stw_s	2
	__ldw	_mapx
	  stx	_al
	__ldw	_mapy
	  stx	_ah
	__ldw	_mapx
	__phw	4,4
	__ldw	_mapy
	__phw	2
	__ldw_s	2
	  stx	_dl
	__ldwi	16
	  stx	_dh
	  call	_load_map.6
LL198:

	__ldw	_mapy
	__stw	<__temp
	__ldw	_lastmapy
	  jsr	gtzp
	__lbeq	LL199
	__ldw	_mapy
	__subw	_lastmapy
	__stw_s	2
	__ldw	_mapy
	__addwi	16
	__pushw
	__ldw_s	4
	__subws
	__andwi	255
	__stw_s	0
	__ldw	_mapx
	  stx	_al
	__ldw_s	0
	  stx	_ah
	__ldw	_mapx
	__phw	4,4
	__ldw_s	0
	__phw	2
	__ldwi	17
	  stx	_dl
	__ldw_s	2
	  stx	_dh
	  call	_load_map.6
LL199:

	__ldw	_mapy
	__stw	<__temp
	__ldw	_lastmapy
	  jsr	ltzp
	__lbeq	LL200
	__ldw	_lastmapy
	__subw	_mapy
	__stw_s	2
	__ldw	_mapx
	  stx	_al
	__ldw	_mapy
	  stx	_ah
	__ldw	_mapx
	__phw	4,4
	__ldw	_mapy
	__phw	2
	__ldwi	17
	  stx	_dl
	__ldw_s	2
	  stx	_dh
	  call	_load_map.6
LL200:

	__ldwi	0
	__pushw
	__ldw	_vmapx
	__pushw
	__ldw	_vmapy
	__pushw
	__ldwi	0
	__pushw
	__ldwi	223
	__pushw
	__ldwi	192
	  call	_scroll
	__ldw	_mapx
	__stw	_lastmapx
	__ldw	_mapy
	__stw	_lastmapy
LL196:

	__addmi	4,__stack
	  rts
	.endp

	.proc _tirage
	  call	_cls
	  call	_init_satb
	  call	_reset_satb
	__ldw	_last_obj_index
	__addw	_right_place_nb
	__addw	_wrong_place_nb
	__addw	_day
	  call	_srand
	__ldwi	0
	__stw	_j
LL202:

	__ldw	_j
	__stw	<__temp
	__ldwi	4
	  jsr	ltzp
	__lbne	LL204
	__lbra	LL205
LL203:

	__ldw	_j
	incw	_j
	__lbra	LL202
LL204:

	__ldwi	8
	  call	_rdm_objects
	__stw	_r
	__ldw	_j
	__aslw
	__addwi	_reference_stack
	__pushw
	__ldw	_r
	__stwps
	__lbra	LL203
LL205:

	  call	_karma
LL201:

	  rts
	.endp

	.proc _rdm_objects
	__pushw
	__ldw_s	0
	  call	_random
	__stw	_r
	__ldw	_r
	incw	_r
	__ldwi	0
	__stw	_i
LL207:

	__ldw	_i
	__stw	<__temp
	__ldwi	4
	  jsr	ltzp
	__lbne	LL209
	__lbra	LL210
LL208:

	__ldw	_i
	incw	_i
	__lbra	LL207
LL209:

	__ldw	_r
	__pushw
	__ldw	_i
	__aslw
	__addwi	_reference_stack
	__stw	__ptr
	__ldwp	__ptr
	  jsr	eq
	__lbeq	LL211
	__ldw_s	0
	  call	_rdm_objects
LL211:

	__lbra	LL208
LL210:

	__ldw	_r
	__lbra	LL206
LL206:

	__addmi	2,__stack
	  rts
	.endp

	.proc _main
	__addmi	-4,__stack
	__stwi_s	10,0
	__ldwi	0
	__stw	_mapx
	__ldwi	0
	__stw	_lastmapx
	__ldwi	0
	__stw	_mapy
	__ldwi	0
	__stw	_lastmapy
	__ldwi	0
	__stw	_vmapx
	__ldwi	0
	__stw	_vmapy
	  call	_cls
	  call	_init_satb
	  call	_reset_satb
	__ldwi	0
	__stw	_color_reg
	__ldwi	0
	__stw	_color_data
	__ldwi	1
	__stw	_color_reg
	__ldwi	511
	__stw	_color_data
	__ldwi	1
	  stx	_al
	__ldwi	0
	  call	_set_font_color.2
	  call	_load_default_font
	__ldwi	LL0+468
	__phw	3,3
	__ldwi	0
	__phb	1
	__ldwi	3
	  call	_put_string.3
	__ldwi	LL0+502
	__phw	3,3
	__ldwi	8
	__phb	1
	__ldwi	6
	  call	_put_string.3
	__ldwi	LL0+522
	__phw	3,3
	__ldwi	0
	__phb	1
	__ldw_s	0
	  call	_put_string.3
	__ldwi	LL0+526
	__phw	3,3
	__ldwi	1
	__phb	1
	__ldw_s	0
	__addwi	1
	  call	_put_string.3
	__ldwi	LL0+543
	__phw	3,3
	__ldwi	1
	__phb	1
	__ldw_s	0
	__addwi	2
	  call	_put_string.3
	__ldwi	LL0+551
	__phw	3,3
	__ldwi	0
	__phb	1
	__ldw_s	0
	__addwi	4
	  call	_put_string.3
	__ldwi	LL0+557
	__phw	3,3
	__ldwi	1
	__phb	1
	__ldw_s	0
	__addwi	5
	  call	_put_string.3
	__ldwi	LL0+566
	__phw	3,3
	__ldwi	1
	__phb	1
	__ldw_s	0
	__addwi	6
	  call	_put_string.3
	__ldwi	LL0+574
	__phw	3,3
	__ldwi	0
	__phb	1
	__ldw_s	0
	__addwi	8
	  call	_put_string.3
	__ldwi	LL0+579
	__phw	3,3
	__ldwi	1
	__phb	1
	__ldw_s	0
	__addwi	9
	  call	_put_string.3
	__ldwi	LL0+587
	__phw	3,3
	__ldwi	1
	__phb	1
	__ldw_s	0
	__addwi	10
	  call	_put_string.3
	__ldwi	LL0+595
	__phw	3,3
	__ldwi	0
	__phb	1
	__ldw_s	0
	__addwi	12
	  call	_put_string.3
	__ldwi	LL0+600
	__phw	3,3
	__ldwi	1
	__phb	1
	__ldw_s	0
	__addwi	13
	  call	_put_string.3
	__ldwi	LL0+621
	__phw	3,3
	__ldwi	1
	__phb	1
	__ldw_s	0
	__addwi	14
	  call	_put_string.3
	__ldwi	LL0+644
	__phw	3,3
	__ldwi	1
	__phb	1
	__ldw_s	0
	__addwi	15
	  call	_put_string.3
	__ldwi	LL0+664
	__phw	3,3
	__ldwi	1
	__phb	1
	__ldw_s	0
	__addwi	16
	  call	_put_string.3
LL213:

LL214:

LL215:

	__pea_s	2
	__ldwi	0
	  call	_joy
	__stwps
	__ldw_s	2
	__andwi	8
	__tstw
	__lbeq	LL217
	  call	_tirage
LL217:

	__lbra	LL215
LL216:

LL212:

	__addmi	4,__stack
	  rts
	.endp

	.data
	.bank CONST_BANK
	.org $4000
LL0:
	.db	65,32,119,105,110,110,101,114
	.db	32,105,115,32,121,111,117,32
	.db	33,33,0,80,114,101,115,115
	.db	32,82,117,110,32,116,111,32
	.db	114,101,115,116,97,114,116,46
	.db	0,65,32,108,111,115,101,114
	.db	32,105,115,32,121,111,117,32
	.db	112,97,116,104,101,116,105,99
	.db	32,104,117,109,97,110,46,0
	.db	77,111,114,98,111,32,119,97
	.db	110,116,115,32,121,111,117,32
	.db	116,111,32,112,114,101,115,115
	.db	32,82,117,110,46,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,73,110,105,116,105,97
	.db	116,101,32,98,111,119,101,108
	.db	32,109,111,118,101,109,101,110
	.db	116,46,0,80,101,114,117,115
	.db	101,32,97,100,117,108,116,32
	.db	109,97,103,97,122,105,110,101
	.db	115,46,0,65,100,100,32,43
	.db	49,32,116,111,32,99,111,102
	.db	102,101,101,32,97,100,100,105
	.db	99,116,105,111,110,0,77,101
	.db	108,116,32,121,111,117,114,32
	.db	98,114,97,105,110,32,119,105
	.db	116,104,32,84,86,46,0,82
	.db	101,115,112,97,119,110,32,46
	.db	46,46,32,116,111,32,119,111
	.db	114,115,101,0,67,104,101,119
	.db	32,100,111,119,110,32,115,111
	.db	109,101,32,98,117,116,116,101
	.db	114,32,115,116,105,99,107,115
	.db	46,0,84,97,107,101,32,97
	.db	32,115,104,111,119,101,114,32
	.db	116,111,32,104,105,100,101,32
	.db	121,111,117,114,32,116,101,97
	.db	114,115,46,0,68,114,117,103
	.db	115,44,32,121,111,117,32,106
	.db	117,115,116,32,99,97,110,39
	.db	116,32,103,101,116,32,101,110
	.db	111,117,103,104,46,0,58,46
	.db	58,32,68,65,89,32,0,32
	.db	58,46,58,0,46,46,58,58
	.db	32,84,97,108,101,115,32,111
	.db	102,32,116,104,101,32,85,110
	.db	101,109,112,108,111,121,101,100
	.db	32,58,58,46,46,0,32,95
	.db	95,45,45,32,80,117,115,104
	.db	32,82,85,78,32,45,45,95
	.db	95,0,71,70,88,0,45,32
	.db	70,108,111,114,105,97,110,32
	.db	68,117,102,111,117,114,0,45
	.db	32,66,106,111,114,110,0,83
	.db	79,85,78,68,0,45,32,77
	.db	114,75,97,111,115,0,45,32
	.db	66,106,111,114,110,0,67,79
	.db	68,69,0,45,32,66,106,111
	.db	114,110,0,45,32,67,114,51
	.db	48,115,0,77,73,83,67,0
	.db	45,32,80,104,97,112,104,101
	.db	39,115,32,109,111,109,32,38
	.db	32,100,97,100,0,45,32,65
	.db	115,116,114,111,102,114,97,32
	.db	38,32,83,99,111,114,112,104
	.db	101,117,115,0,45,32,77,111
	.db	118,105,100,97,32,80,114,111
	.db	100,117,99,116,105,111,110,0
	.db	45,32,35,71,71,74,49,54
	.db	32,64,32,79,114,108,101,97
	.db	110,115,0
_leveltiles:
	.dw	132
	.dw	16
	.dw	BANK(_leveltiles__data__)
	.dw	     _leveltiles__data__
	.dw	LL0+102

	.bss
_r:		.ds	2
_i:		.ds	2
_j:		.ds	2
_last_obj_index:		.ds	2
_right_place_nb:		.ds	2
_wrong_place_nb:		.ds	2
_day:		.ds	2
_reference_stack:		.ds	8
_action_stack:		.ds	8
_objects:		.ds	16
_tiles_w_obj:		.ds	46
_track:		.ds	1
_mstat:		.ds	1
_sstat:		.ds	1
_VSyncCnt:		.ds	2
_TimerCnt:		.ds	2
_MainCnt:		.ds	2
_SubCnt:		.ds	2
_tics_sprite:		.ds	2
_frame_sprite:		.ds	2
_state_sprite:		.ds	2
_counter:		.ds	2
_decal_frame:		.ds	2
_j1:		.ds	2
_sprite_x:		.ds	2
_sprite_y:		.ds	2
_sprite_v:		.ds	2
_sprite_vx:		.ds	2
_sprite_vy:		.ds	2
_sprite_nx:		.ds	2
_sprite_ny:		.ds	2
_mapx:		.ds	2
_lastmapx:		.ds	2
_mapy:		.ds	2
_lastmapy:		.ds	2
_vmapx:		.ds	2
_vmapy:		.ds	2
_dir_sprite:		.ds	1
__arg:

;0 error(s) in compilation
;	literal pool:683
;	constant pool:10
;	global pool:3840
;	Macro pool:1403
